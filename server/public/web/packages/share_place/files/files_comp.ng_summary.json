{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "dart:async",
        "5": false
      },
      {
        "1": "dart:html",
        "5": false
      },
      {
        "1": "package:angular2/core.dart",
        "5": false
      },
      {
        "1": "package:angular2/angular2.dart",
        "5": false
      },
      {
        "1": "package:angular2/router.dart",
        "5": false
      },
      {
        "1": "file_action.dart",
        "5": false
      },
      {
        "1": "package:share_place/file_info.dart",
        "5": false
      },
      {
        "1": "package:share_place/place.dart",
        "5": false
      },
      {
        "1": "package:share_place/folder.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/user.dart",
        "5": false
      },
      {
        "1": "package:share_place/place_service.dart",
        "5": false
      },
      {
        "1": "package:share_place/environment.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/ui/text_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/format/ago_date_format_pipe.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/format/file_size_pipe.dart",
        "5": false
      },
      {
        "1": "cloud_file.dart",
        "5": false
      },
      {
        "1": "package:angular2_components/angular2_components.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "FilesComp",
        "5": [
          {
            "1": "PlaceService",
            "4": "_placeService"
          },
          {
            "1": "Router",
            "4": "_router"
          },
          {
            "1": "Environment",
            "4": "_environment"
          }
        ],
        "6": [
          "OnInit"
        ],
        "7": [
          {
            "2": "TextComp"
          },
          {
            "2": "NgClass"
          },
          {
            "2": "materialDirectives"
          }
        ],
        "8": [
          {
            "2": "AgoDateFormatPipe"
          },
          {
            "2": "FileSizePipe"
          }
        ]
      }
    ],
    "6": "files_comp.dart"
  },
  "type": {
    "FileVersionAttributes": {
      "class": "Identifier",
      "name": "FileVersionAttributes",
      "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
      "prefix": null,
      "value": null
    },
    "FileVersionsMap": {
      "class": "Identifier",
      "name": "FileVersionsMap",
      "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
      "prefix": null,
      "value": null
    },
    "FilesComp": {
      "class": "Directive",
      "isComponent": true,
      "selector": "files-comp",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "FilesComp",
        "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": [
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "PlaceService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Router",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Environment",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          }
        ]
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [
        0
      ],
      "template": {
        "encapsulation": 0,
        "template": "<div class=\"files\">\r\n  <div *ngIf=\"selectedFile != null\" class=\"content\">\r\n\r\n\r\n    <div class=\"title\">File\r\n      <div class=\"icons\">\r\n        <!--<i class=\"material-icons\">remove_red_eye</i>-->\r\n        <!--<i class=\"material-icons arrowbottom\">arrow_drop_down</i>-->\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div *ngIf=\"isUploading\" class=\"isUploading\">\r\n      <div class=\"progress\"></div>\r\n    </div>\r\n\r\n    <div class=\"newTopic\">\r\n      <div class=\"newComment newTopicBlock\">\r\n        <img src=\"/auth/user/photo/s/{{connectedUser.id}}\" class=\"profileImg\">\r\n        <input #comment class=\"comment\"\r\n               (keyup.enter)=\"addComment(comment.value, selectedFile.versions.last.v);comment.value='';\"\r\n               class=\"txt\"/>\r\n\r\n        <div (click)=\"addComment(comment.value, selectedFile.versions.last.v);comment.value='';\"\r\n             class=\"btn_valid\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <ul class=\"list\">\r\n      <li class=\"file\">\r\n        <div class=\"fileDesc\">\r\n          <div class=\"latestVersionComments\">\r\n            <div class=\"versions\">\r\n              <ul>\r\n                <li *ngFor=\"let versionItem of selectedFile.orderedVersions; let versionIndex = index\"\r\n                    class=\"version_part_li\">\r\n\r\n                  <div class=\"versionTitle\">\r\n                    <!--<div class=\"line\"></div>-->\r\n                    <div class=\"versionTitleNumber\">Version {{versionItem?.v}}</div>\r\n                    <div class=\"switchOnComments fa\"\r\n                         [ngClass]=\"{'fa-angle-down': isCommentsOpen(selectedFile.id, versionItem.v), 'fa-angle-up': !isCommentsOpen(selectedFile.id, versionItem.v)}\"\r\n                         (click)=\"switchCommentOpen(selectedFile.id, versionItem.v)\"></div>\r\n                  </div>\r\n\r\n                  <div class=\"version\">\r\n                    <div *ngIf=\"isCommentsOpen(selectedFile.id, versionItem.v)\" class=\"versionComments\"\r\n                         [class.activep]=\"isCommentsOpen(selectedFile.id, versionItem.v)\">\r\n                      <ul class=\"commentList\">\r\n                        <li *ngFor=\"let actionItem of getActionsForVersion(versionItem)\" class=\"litestme\">\r\n                          <div *ngIf=\"actionItem.action.actionType == 'comment'\" class=\"ownAction\">\r\n                            <div class=\"commentBlock\"><span\r\n                                class=\"author\"> <img\r\n                                src=\"/auth/user/photo/s/{{actionItem.user.userId}}\" class=\"profileImg\"></span>\r\n                              <span class=\"comm-ts\">{{actionItem.ts | agoDateFormat}} </span>\r\n                            </div>\r\n\r\n                            <div class=\"arrow_box_in\">\r\n                              <div class=\"action arrow_box\"> {{actionItem.text}}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div *ngIf=\"actionItem.action.actionType == 'fileApprove'\"\r\n                               [class.ownAction]=\"connectedUser.id == actionItem.user.userId\">\r\n                            <div class=\"approveBlock\"><span\r\n                                class=\"author\"> <img\r\n                                src=\"/auth/user/photo/s/{{actionItem.user.userId}}\" class=\"profileImg\"></span>\r\n                              <span class=\"action-ts\">{{actionItem.ts | agoDateFormat}} </span></div>\r\n\r\n                            <div class=\"arrow_box_in\">\r\n                              <div class=\"action arrow_box\"> {{actionItem.action.value == 'on' ? \"approved\" :\r\n                                \"unapproved\"}}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div *ngIf=\"actionItem.action.actionType == 'fileLock'\" class=\"lockedFile ownAction\">\r\n                            <div class=\"left\">\r\n                              <img src=\"/auth/user/photo/m/{{actionItem.user.userId}}\" class=\"lockUserPhoto\">\r\n                              <div class=\"lockTime\">{{actionItem.ts | agoDateFormat}}</div>\r\n                            </div>\r\n                            <div class=\"lockText\">{{actionItem.user.userName}} {{actionItem.action.value == 'on' ? \"is\r\n                              editing\" : \"edited\"}} version {{versionItem.v}}\r\n                            </div>\r\n                          </div>\r\n\r\n                        </li>\r\n                        <li *ngIf=\"hasMoreComments(selectedFile.id, versionItem.v)\" class=\"more\">\r\n                          <div (click)=\"moreComments(selectedFile.id, versionItem.v)\">more...</div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <material-popup defaultPopupSizeProvider\r\n                                  enforceSpaceConstraints\r\n                                  [source]=\"fileMenu\"\r\n                                  [visible]=\"fileMenuVisible == versionItem.v\"\r\n                                  (visible)=\"switchMenuState(versionItem.v)\">\r\n                    <div header class=\"popupHeader\">\r\n                      <div class=\"fileName\">Version {{selectedFile.name}}</div>\r\n                      <div class=\"fileInfo\">\r\n                        Version {{versionItem.v}} {{versionItem.ts | agoDateFormat}}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"popupContent\">\r\n                      <div group>\r\n                        <material-button (click)=\"approve(versionItem)\" *ngIf=\"versionItem.approved == null\"\r\n                                         class=\"menuItem\">\r\n                          Approve\r\n                        </material-button>\r\n                        <material-button (click)=\"unapprove(versionItem)\" *ngIf=\"versionItem.approved != null\"\r\n                                         class=\"menuItem\">\r\n                          Unapprove\r\n                        </material-button>\r\n                        <material-button *ngIf=\"!selectedFile.isLocked\" (click)=\"lock()\" class=\"menuItem\">\r\n                          Lock\r\n                        </material-button>\r\n                        <material-button *ngIf=\"selectedFile.isLocked\" (click)=\"unlock()\" class=\"menuItem\">\r\n                          Unlock\r\n                        </material-button>\r\n                      </div>\r\n                      <material-button (click)=\"delete()\" class=\"menuItem\">\r\n                        Delete\r\n                      </material-button>\r\n\r\n                    </div>\r\n                    <div footer>\r\n                    </div>\r\n                  </material-popup>\r\n\r\n                  <modal *ngIf=\"openFile\" [visible]=\"openFile\">\r\n                    <material-dialog class=\"basic-dialog fileOpen\">\r\n                      <div header class=\"popupHeader\">\r\n                        <div class=\"fileName\">Version {{selectedFile.name}}</div>\r\n                        <div class=\"close\" (click)=\"cancelFileOpen()\">x</div>\r\n                      </div>\r\n                      <div class=\"content\">\r\n                        <div class=\"explanation\">Do you want to lock and modify or just take a look at the document?</div>\r\n                        <div class=\"actions\">\r\n                          <div class=\"btn lock\" (click)=\"lockAndOpen(versionItem.v)\">Lock & Modify</div>\r\n                          <div class=\"btn openOnly\" (click)=\"openFileLink(versionItem.v)\">View</div>\r\n                        </div>\r\n                      </div>\r\n                    </material-dialog>\r\n                  </modal>\r\n\r\n                  <div class=\"header_file\" [class.approved]=\"versionItem.approved != null\">\r\n                    <div class=\"left commentBlock\">\r\n                      <!--<a href=\"/sp/place/{{selectedPlace?.id}}/folder/{{selectedFolder?.id}}/file/{{selectedFile?.id}}/version/{{versionItem?.v}}\">Version-->\r\n                      <!--{{versionItem?.v}}</a>-->\r\n                      <!--<span> ({{versionItem.size | fileSizeFormat}})</span>-->\r\n                      <!--<span>by {{versionItem.userName}}</span>-->\r\n                      <span class=\"author\"><img src=\"/auth/user/photo/s/{{versionItem.userId}}\"\r\n                                                class=\"profileImg\"></span>\r\n                      <span class=\"comm-ts\">{{versionItem?.ts | agoDateFormat}}</span>\r\n\r\n                    </div>\r\n                    <div class=\"arrow_box_in\">\r\n                      <div class=\"arrow_box\">\r\n                        <div class=\"\">\r\n                          <div class=\"fileThumb\" popupSource\r\n                               #fileMenu=\"popupSource\"\r\n                               (click)=\"switchMenuState(versionItem.v)\">\r\n                            <div class=\"fileThumb_bg\">\r\n                              <img src=\"/sp/place/{{selectedPlace?.id}}/folder/{{selectedFolder?.id}}/file/{{selectedFile?.id}}/version/{{versionItem.v}}/thumb\"\r\n                                  class=\"thumbnail\">\r\n                              <div class=\"uploadStatus\" *ngIf=\"versionItem.status!='uploaded'\"><img src=\"../images/uploading.png\"/></div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"rightDetails\">\r\n                            <div class=\"fileProps\">\r\n                              <div class=\"line\">\r\n                                <!--href=\"/sp/place/{{selectedPlace?.id}}/folder/{{selectedFolder?.id}}/file/{{selectedFile?.id}}/version/{{versionItem.v}}/download\" -->\r\n                                <div (click)=\"openFileDialog()\">\r\n                                  <div class=\"fileName\">{{selectedFile?.name}}</div>\r\n                                </div>\r\n                                <span class=\"fileversion\">v. {{versionItem.v}}</span>\r\n                                <div class=\"linerow\">\r\n                                  <span class=\"filetypedoc\">{{formatDesc( versionItem )}}</span>\r\n                                  <span class=\"fileSize\">\r\n                         ({{selectedFile.orderedVersions[0].size | fileSizeFormat}})\r\n                       </span>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <!--<div class=\"line2\">{{selectedFile.orderedVersions[0].actionCount == null ? \"no \" :-->\r\n                              <!--selectedFile.orderedVersions[0].actionCount.toString()}} comments-->\r\n                              <!--</div>-->\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>",
        "templateUrl": "asset:share_place/lib/files/files_comp.html",
        "styles": [],
        "styleUrls": [
          "asset:share_place/lib/files/files_comp.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [
        {
          "class": "Identifier",
          "name": "materialProviders",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        }
      ],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}