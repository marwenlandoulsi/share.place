{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "dart:async",
        "5": false
      },
      {
        "1": "dart:html",
        "5": false
      },
      {
        "1": "package:angular2/core.dart",
        "5": false
      },
      {
        "1": "package:angular2/angular2.dart",
        "5": false
      },
      {
        "1": "package:angular2/router.dart",
        "5": false
      },
      {
        "1": "file_action.dart",
        "5": false
      },
      {
        "1": "package:share_place/file_info.dart",
        "5": false
      },
      {
        "1": "package:share_place/place.dart",
        "5": false
      },
      {
        "1": "package:share_place/folder.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/user.dart",
        "5": false
      },
      {
        "1": "package:share_place/place_service.dart",
        "5": false
      },
      {
        "1": "package:share_place/environment.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/ui/text_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/format/ago_date_format_pipe.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/format/file_size_pipe.dart",
        "5": false
      },
      {
        "1": "package:share_place/app_config.dart",
        "4": "conf",
        "5": false
      },
      {
        "1": "cloud_file.dart",
        "5": false
      },
      {
        "1": "package:angular_components/angular_components.dart",
        "5": false
      },
      {
        "1": "package:share_place/postit/postit_component.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/info_popup/info_popup.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/info_popup/popup_parent.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "FilesComp",
        "5": [
          {
            "1": "PlaceService",
            "4": "_placeService"
          },
          {
            "1": "Router",
            "4": "_router"
          },
          {
            "1": "Environment",
            "4": "_environment"
          }
        ],
        "6": [
          "OnInit",
          "PopupParent"
        ],
        "7": [
          {
            "2": "TextComp"
          },
          {
            "2": "NgClass"
          },
          {
            "2": "materialDirectives"
          },
          {
            "2": "PostitComponent"
          },
          {
            "2": "InfoPopup"
          }
        ],
        "8": [
          {
            "2": "AgoDateFormatPipe"
          },
          {
            "2": "FileSizePipe"
          }
        ]
      }
    ],
    "6": "files_comp.dart"
  },
  "type": {
    "FileVersionAttributes": {
      "class": "Identifier",
      "name": "FileVersionAttributes",
      "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
      "prefix": null,
      "value": null
    },
    "FileVersionsMap": {
      "class": "Identifier",
      "name": "FileVersionsMap",
      "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
      "prefix": null,
      "value": null
    },
    "FilesComp": {
      "class": "Directive",
      "isComponent": true,
      "selector": "files-comp",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "FilesComp",
        "moduleUrl": "asset:share_place/lib/files/files_comp.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": [
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "PlaceService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Router",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Environment",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          }
        ]
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [
        0
      ],
      "template": {
        "encapsulation": 0,
        "template": "<div class=\"files\">\r\n  <div *ngIf=\"selectedFile != null\" class=\"content\">\r\n\r\n    <div class=\"title\" title=\"{{selectedFile.name}}\"> {{selectedFile.name}}\r\n      <div class=\"icons\"></div>\r\n    </div>\r\n    <!--<div *ngIf=\"isUploading\" class=\"isUploading\">-->\r\n    <!--<div class=\"progress\"></div>-->\r\n    <!--</div>-->\r\n\r\n    <div class=\"newTopic\">\r\n      <div class=\"newComment newTopicBlock\">\r\n\r\n        <img *ngIf =\"connectedUser.photoIdMap != null\" src=\"/auth/gridfs/file/{{connectedUser?.photoIdMap['photoIdS']}}/picture.x\" class=\"profileImg\">\r\n        <img  *ngIf =\"connectedUser.photoIdMap == null\" src=\"../images/img_profile.png\" class=\"profileImg\">\r\n        <div class=\"arowmenow\">\r\n          <input #comment class=\"comment\" placeholder=\"Write your comment here\"\r\n                                      (keyup.enter)=\"addComment(comment.value, selectedFile.versions.last.v);comment.value='';\"\r\n                                      class=\"txt\"/>\r\n          <!--<textarea #comment class=\"comment\"  id=\"commentArea\" placeholder=\"ffffff your comment here\"-->\r\n                 <!--(keyup.enter)=\"addComment(comment.value, selectedFile.versions.last.v);comment.value='';\"-->\r\n                 <!--class=\"txt\"></textarea>-->\r\n\r\n\r\n          <div (click)=\"addComment(comment.value, selectedFile.versions.last.v);comment.value='';\"\r\n               class=\"btn_valid\"></div>\r\n\r\n        </div>\r\n        <div class=\"addTopicBtn\"  (click)=\"fileInput.click()\"></div>\r\n        <postit-comp [name]=\"'comment'\" [body]=\"'To talk to the team, type a comment here...'\"\r\n                     class=\"commentPostit\"></postit-comp>\r\n      </div>\r\n    </div>\r\n    <div #dropZone class=\"versionsListScroll scrollIe\" (dragenter)=\"dragEnter(dropZone)\">\r\n\r\n      <form id=\"uploadVersion\">\r\n        <input #fileInput  type=\"file\" name=\"toUpload\" (change)=\"uploadVersion($event.target.files[0].name)\" class=\"fileDropZone\"\r\n               (drop)=\"fileDropped(dropZone)\" (dragleave)=\"dragLeave(dropZone)\">\r\n        <!--onclick=\"event.preventDefault();\"-->\r\n      </form>\r\n\r\n      <div class=\"scrollbar-macosx\">\r\n        <div class=\"spinnerInner\">\r\n          <material-spinner class=\"spinner\" *ngIf=\"selectedFile == null\"></material-spinner>\r\n        </div>\r\n        <ul class=\"list\">\r\n          <li class=\"file\">\r\n            <div class=\"fileDesc\">\r\n              <div class=\"latestVersionComments\">\r\n                <div class=\"versions\">\r\n                  <ul>\r\n                    <li *ngFor=\"let versionItem of selectedFile.orderedVersions; let versionIndex = index\"\r\n                        class=\"liVersion\" [class.closeIt]=\"!isCommentsOpen(selectedFile.id, versionItem.v)\">\r\n                        <!--*ngIf=\"actionBlock has class draft\"-->\r\n\r\n                      <div class=\"versionTitle\" (click)=\"switchCommentOpen(selectedFile.id, versionItem.v)\">\r\n                        <!--*ngIf=\"selectedFile.dataType != 'quickNote'\"-->\r\n                        <div class=\"versionTitleNumber\">Version {{versionItem?.v}}</div>\r\n                        <div class=\"toggleVersion fa\"\r\n                             [ngClass]=\"{'fa-angle-down': isCommentsOpen(selectedFile.id, versionItem.v), 'fa-angle-up': !isCommentsOpen(selectedFile.id, versionItem.v)}\"\r\n                        >\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"version\">\r\n                        <div *ngIf=\"versionItem.mailInfo != null\" class=\"mailInfo\">\r\n                          <div class=\"account\">{{versionItem.mailInfo.account}}</div>\r\n                          <div class=\"subject\">{{versionItem.mailInfo.subject}}</div>\r\n                          <div class=\"body\">{{versionItem.mailInfo.body}}</div>\r\n                        </div>\r\n                        <!-- new uplo -->\r\n                        <div *ngIf=\"selectedFile.orderedVersions.length == versionItem.v \">\r\n                          <div *ngIf=\"isUploading\" class=\"isUploading\">\r\n                            <div class=\"progress\"></div>\r\n                          </div>\r\n                        </div>\r\n                        <!-- end new uplo -->\r\n                        <div *ngIf=\"isCommentsOpen(selectedFile.id, versionItem.v)\"\r\n                             class=\"versionComment \">\r\n\r\n                          <ul class=\"actionList\">\r\n\r\n                            <li *ngFor=\"let actionItem of getActionsForVersion(versionItem); let actionIndex = index\"\r\n                                class=\"actionLiElem\"\r\n                                [class.ownAction]=\"isActionAuthor( actionItem )\"\r\n                                [class.isActionOn]=\"isActionOn( actionItem )\">\r\n\r\n\r\n                              <!--comment-->\r\n                              <div *ngIf=\"actionItem.action.actionType == 'comment'\"\r\n                                   class=\"actionBlock commentBlock\">\r\n\r\n                                <div (click)=\"showUserInfoPopup( versionItem, actionIndex )\"\r\n                                     class=\"actionPropsBlock\"\r\n                                     popupSource alignPositionX=\"before\"\r\n                                     alignPositionY=\"start\" #commentAuthor=\"popupSource\">\r\n                              <span class=\"author\"><img src=\"/auth/user/photo/s/{{actionItem.user.userId}}\"\r\n                                                        class=\"profileImg\"></span>\r\n                                  <span class=\"comm-ts\">{{actionItem?.ts | agoDateFormat}}</span>\r\n                                  <info-popup *ngIf=\"isUserInfoPopup(versionItem, actionIndex)\"\r\n                                              [userId]=\"popupUserInfoId\"\r\n                                              [source]=\"commentAuthor\" [parent]=\"self\" [offsetY]=\"-10\"\r\n                                              [arrowCss]=\"'arrowRight'\"></info-popup>\r\n                                </div>\r\n\r\n                                <div class=\"bubble\">\r\n                                  <div class=\"bubbleContent\"> {{actionItem.text}}</div>\r\n                                </div>\r\n                              </div>\r\n                              <!--fileApprove-->\r\n                              <div *ngIf=\"actionItem.action.actionType == 'fileApprove'\"\r\n                                   class=\"actionBlock etatBlock approveBlock\">\r\n\r\n                                <div (click)=\"showUserInfoPopup( versionItem, actionIndex )\"\r\n                                     class=\"actionPropsBlock\"\r\n                                     popupSource alignPositionX=\"before\"\r\n                                     alignPositionY=\"start\" #approveAuthor=\"popupSource\">\r\n                              <span class=\"author\"><img src=\"/auth/user/photo/s/{{actionItem.user.userId}}\"\r\n                                                        class=\"profileImg\"></span>\r\n                                  <span class=\"comm-ts\">{{actionItem?.ts | agoDateFormat}}</span>\r\n                                  <info-popup *ngIf=\"isUserInfoPopup(versionItem, actionIndex)\"\r\n                                              [userId]=\"popupUserInfoId\"\r\n                                              [offsetY]=\"-10\" [source]=\"approveAuthor\" [parent]=\"self\"\r\n                                              [arrowCss]=\"'arrowRight'\"></info-popup>\r\n                                </div>\r\n\r\n                                <div class=\"bubble\">\r\n                                  <div class=\"bubbleContent\">\r\n                                <span class=\"constructText\">{{constructText(versionItem, actionItem)}}\r\n                                </span>\r\n                                    <div class=\"approveIcon bgWhiteIcon\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                              <!--fileLock-->\r\n                              <div *ngIf=\"actionItem.action.actionType == 'fileLock'\"\r\n                                   class=\"actionBlock etatBlock lockBlock\">\r\n                                <div (click)=\"showUserInfoPopup( versionItem, actionIndex )\"\r\n                                     class=\"actionPropsBlock\"\r\n                                     popupSource alignPositionX=\"before\"\r\n                                     alignPositionY=\"start\" #lockAuthor=\"popupSource\">\r\n                              <span class=\"author\"><img src=\"/auth/user/photo/s/{{actionItem.user.userId}}\"\r\n                                                        class=\"profileImg\"></span>\r\n                                  <span class=\"comm-ts\">{{actionItem?.ts| agoDateFormat}}</span>\r\n                                  <info-popup *ngIf=\"isUserInfoPopup(versionItem, actionIndex)\"\r\n                                              [userId]=\"popupUserInfoId\"\r\n                                              [offsetY]=\"-10\" [source]=\"lockAuthor\" [parent]=\"self\"\r\n                                              [arrowCss]=\"'arrowRight'\"></info-popup>\r\n                                </div>\r\n\r\n                                <div class=\"bubble\">\r\n                                  <div class=\"bubbleContent\">\r\n                                    <material-button\r\n                                        *ngIf=\"showReleaseButton(actionItem, actionIndex, versionIndex)\"\r\n                                        class=\"release\" (click)=\"unlock()\">\r\n                                      Release\r\n                                    </material-button>\r\n                                    <span class=\"constructText\">{{constructText(versionItem, actionItem)}}</span>\r\n                                    <div class=\"lockIcon\"></div>\r\n                                  </div>\r\n\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                            <!--connectedUser-->\r\n                            <li class=\"actionLiElem\" [class.ownAction]=\"connectedUser.id == versionItem.userId\">\r\n                              <div class=\"actionBlock {{versionItem.approved == null ? 'draft' : 'approved'}}\">\r\n                                <div class=\"actionPropsBlock\" (click)=\"showUserInfoPopup( versionItem, -1 )\"\r\n                                     popupSource\r\n                                     alignPositionX=\"before\"\r\n                                     alignPositionY=\"start\" #fileAuthor=\"popupSource\">\r\n                              <span class=\"author\"><img src=\"/auth/user/photo/s/{{versionItem.userId}}\"\r\n                                                        class=\"profileImg\"></span>\r\n                                  <span class=\"comm-ts\">{{versionItem?.ts | agoDateFormat}}</span>\r\n                                  <info-popup *ngIf=\"isUserInfoPopup(versionItem, -1)\" [userId]=\"popupUserInfoId\"\r\n                                              [offsetY]=\"-10\" [source]=\"fileAuthor\" [parent]=\"self\"\r\n                                              [arrowCss]=\"'arrowRight'\"></info-popup>\r\n                                </div>\r\n\r\n                                <div class=\"bubble\">\r\n\r\n                                  <div class=\"bubbleContent\">\r\n                                    <div class=\"pLeft\" [class.noClick]=\"!isFile\"\r\n                                         (click)=\"openFileDialog(versionItem.v)\">\r\n                                      <div class=\"fileThumb\">\r\n                                        <div class=\"fileThumb_bg\">\r\n                                          <div *ngIf=\"versionItem.status == 'waiting'\" class=\"spinnerInner\">\r\n                                            <material-spinner class=\"spinner\"></material-spinner>\r\n                                          </div>\r\n                                          <img *ngIf=\"versionItem.status != 'waiting'\"\r\n                                              src=\"{{thumbSrc(versionItem,selectedFolder,selectedFile )}}\"\r\n                                              class=\"thumbnail\">\r\n\r\n                                          <div *ngIf=\"versionItem.status!='uploaded' && versionItem?.mimeType != 'application/quickNote'\"\r\n                                              class=\"uploadStatus\">\r\n\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class=\"rightDetails\">\r\n                                        <!--version +actions more>-->\r\n                                        <div class=\"fileProps\">\r\n                                          <div class=\"line\">\r\n                                            <div class=\"fileLink\">\r\n                                              <div class=\"fileName\" title=\"{{versionItem?.name}}\">{{versionItem?.name}}</div>\r\n                                            </div>\r\n                                            <div class=\"linerow\"\r\n                                                 *ngIf=\"versionItem?.mimeType != 'application/quickNote'\">\r\n                                              <span class=\"filetypedoc\">{{formatDesc( versionItem )}}</span>\r\n                                              <span class=\"fileSize\">\r\n                                            {{selectedFile.orderedVersions[0].size | fileSizeFormat}}\r\n                                          </span>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"fileMoreActions\">\r\n                                      <span class=\"fileversion\"\r\n                                            *ngIf=\"versionItem?.mimeType != 'application/quickNote'\">v. {{versionItem.v}}</span>\r\n                                      <span class=\"moreActions\" popupSource\r\n                                            #fileMenu=\"popupSource\" alignPositionY=\"after\" alignPositionX=\"end\"\r\n                                            (click)=\"switchMenuState(versionItem.v)\"></span>\r\n                                    </div>\r\n\r\n                                    <material-popup *ngIf=\"fileMenuVisible == versionItem.v\" class=\"popVersion\"\r\n                                                    defaultPopupSizeProvider\r\n                                                    [source]=\"fileMenu\"\r\n                                                    [visible]=\"fileMenuVisible == versionItem.v\"\r\n                                                    (close)=\"fileMenuVisible = -1\">\r\n                                      <div header class=\"headerPopVersion\">\r\n                                        <div class=\"fileName\">{{versionItem.name}}</div>\r\n                                        <div class=\"fileInfo\">\r\n                                          <!--*ngIf=\"selectedFile.dataType != 'quickNote'\"-->\r\n                                          <span>Version {{versionItem.v}},</span> {{versionItem.ts | agoDateFormat}}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class=\"popupContent popinVersion\">\r\n                                        <div group>\r\n                                          <material-button (click)=\"approve(versionItem)\"\r\n                                                           *ngIf=\"shouldShowApproveMenu(versionItem)\"\r\n                                                           class=\"menuItemVers\">\r\n                                            <span class=\"spanVers\"> <i\r\n                                                class=\"zmdi zmdi-check-circle approve\"></i> </span>\r\n                                            Approve\r\n                                          </material-button>\r\n                                          <material-button (click)=\"unapprove(versionItem)\"\r\n                                                           *ngIf=\"shouldShowUnApproveMenu(versionItem)\"\r\n                                                           class=\"menuItemVers\">\r\n                                          <span class=\"spanVers\"><i\r\n                                              class=\"zmdi zmdi-check-circle nnApprove\"></i> </span>\r\n                                            Unapprove\r\n                                          </material-button>\r\n                                        </div>\r\n                                        <material-button class=\"menuItemVers\" *ngIf=\"false\">\r\n                                              <span class=\"spanVers\"><i\r\n                                                  class=\"zmdi zmdi-comment commentVers\"></i> </span>Comment\r\n\r\n                                        </material-button>\r\n                                        <material-button (click)=\"delete(versionItem)\" class=\"menuItemVers\" >\r\n                                          <span class=\"spanVers\"><i class=\"zmdi zmdi-delete delete\"></i> </span>\r\n                                          Delete\r\n                                        </material-button>\r\n                                      </div>\r\n                                    </material-popup>\r\n                                  </div>\r\n\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n\r\n                      <modal *ngIf=\"openFileVersion != -1\" [visible]=\"openFileVersion != -1\">\r\n                        <material-dialog class=\"basic-dialog fileOpen\" hideHeader=\"true\" hideFooter=\"true\">\r\n                          <div class=\"popupHeader\">\r\n                            <div class=\"fileName\">{{selectedFile.name}}</div>\r\n                            <div class=\"close\" (click)=\"cancelFileOpen()\"></div>\r\n                          </div>\r\n                          <div class=\"content\">\r\n                            <div class=\"explanation\">Do you want to lock and modify or just take a look at the document?\r\n                            </div>\r\n                            <div class=\"fileActions\">\r\n                              <div class=\"fileActions_btn\">\r\n                                <div class=\"btn material-icons lock\" (click)=\"lockAndOpen(openFileVersion)\"><span>Lock & Modify</span>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"fileActions_btn posRight\">\r\n                                <div class=\"btn material-icons openOnly\" (click)=\"openFileLink(openFileVersion)\">\r\n                                  <span>View (read only)</span></div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </material-dialog>\r\n                      </modal>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>",
        "templateUrl": "asset:share_place/lib/files/files_comp.html",
        "styles": [],
        "styleUrls": [
          "asset:share_place/lib/files/files_comp.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [
        {
          "class": "Identifier",
          "name": "materialProviders",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        }
      ],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}