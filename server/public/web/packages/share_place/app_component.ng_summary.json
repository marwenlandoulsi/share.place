{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "dart:async",
        "5": false
      },
      {
        "1": "dart:html",
        "5": false
      },
      {
        "1": "package:angular2/core.dart",
        "5": false
      },
      {
        "1": "package:angular2/router.dart",
        "5": false
      },
      {
        "1": "package:angular_components/angular_components.dart",
        "5": false
      },
      {
        "1": "app_config.dart",
        "4": "conf",
        "5": false
      },
      {
        "1": "environment.dart",
        "5": false
      },
      {
        "1": "package:share_place/error/error_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/file_info.dart",
        "5": false
      },
      {
        "1": "package:share_place/places_component.dart",
        "5": false
      },
      {
        "1": "package:share_place/place_service.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/ui/notification.dart",
        "4": "notif",
        "5": false
      },
      {
        "1": "package:share_place/path_change_interceptor.dart",
        "5": false
      },
      {
        "1": "package:share_place/files/files_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/news/news_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/subjects/subjectList/subject_list_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/change_roles/change_roles_dialog_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/login/login_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/profile/profile_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/terms_andconditions/terms_andconditions.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/user.dart",
        "5": false
      },
      {
        "1": "package:share_place/search/search_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/electron/proxy_credentials.dart",
        "5": false
      },
      {
        "1": "package:share_place/search/search_input/search_input.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/download_app/download_app.dart",
        "5": false
      },
      {
        "1": "package:share_place/app_constants.dart",
        "5": false
      },
      {
        "1": "package:share_place/breadcrumbs/breadcrumbs_comp.dart",
        "5": false
      },
      {
        "1": "package:angular2/security.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "AppComponent",
        "4": [
          {
            "1": "RouteConfig",
            "2": [
              "const [const Route(path: '/', name: 'Home', component: PathChangeInterceptor), const Route(path: '/places/mail/', name: 'ShowMail', component: PathChangeInterceptor), const Route(path: '/places/', name: 'PlaceList', component: PathChangeInterceptor), const Route(path: '/places/:pId/', name: 'PlaceSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/', name: 'PlaceSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/', name: 'FolderSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/topics/', name: 'FolderSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/topics/:tId/', name: 'SubjectSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/topics/:tId/versions/', name: 'SubjectSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/topics/:sType', name: 'MailImportSelected', component: PathChangeInterceptor), const Route(path: '/places/:pId/folders/:fId/topics/:tId/versions/:vId/', name: 'FileVersionSelected', component: PathChangeInterceptor)]"
            ],
            "4": false
          }
        ],
        "5": [
          {
            "1": "Router",
            "4": "_router"
          },
          {
            "1": "Environment",
            "4": "_environment"
          },
          {
            "1": "DomSanitizationService",
            "4": "urlSanitizer"
          },
          {
            "1": "PlaceService",
            "4": "_placeService"
          }
        ],
        "6": [
          "OnInit"
        ],
        "7": [
          {
            "2": "ROUTER_DIRECTIVES"
          },
          {
            "2": "materialDirectives"
          },
          {
            "2": "PlacesComponent"
          },
          {
            "2": "NewsComp"
          },
          {
            "2": "FilesComp"
          },
          {
            "2": "SubjectListComponent"
          },
          {
            "2": "LoginComp"
          },
          {
            "2": "ProfileComp"
          },
          {
            "1": "notif",
            "2": "Notification"
          },
          {
            "2": "ChangeRolesDialogComp"
          },
          {
            "2": "TermsAndconditions"
          },
          {
            "2": "downloadApp"
          },
          {
            "2": "ElasticSearchComponent"
          },
          {
            "2": "ProxyCredentials"
          },
          {
            "2": "SearchInput"
          },
          {
            "2": "MaterialTooltipDirective"
          },
          {
            "2": "ErrorComp"
          },
          {
            "2": "BreadcrumbsComp"
          }
        ]
      }
    ],
    "6": "app_component.dart"
  },
  "type": {
    "AppComponent": {
      "class": "Directive",
      "isComponent": true,
      "selector": "my-app",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "AppComponent",
        "moduleUrl": "asset:share_place/lib/app_component.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": [
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Router",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Environment",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "DomSanitizationService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "PlaceService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          }
        ]
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [
        0
      ],
      "template": {
        "encapsulation": 0,
        "template": "<div class=\"resizeTopElectron\" *ngIf=\"!isWebApp\"></div>\r\n<div [ngClass]=\"{'appElectron': !isWebApp , 'isMacAndFirefox' : isMacAndFirefox, 'mac': isMac}\">\r\n  <div>\r\n    <downloadApp-comp [name]=\"'downloadApp'\"></downloadApp-comp>\r\n  </div>\r\n  <modal *ngIf=\"connectedUser == null\" [visible]=\"true\">\r\n    <material-dialog class=\"basic-dialog login_pop\">\r\n      <login-comp></login-comp>\r\n    </material-dialog>\r\n  </modal>\r\n\r\n  <modal *ngIf=\"profilePopinVisible\" [visible]=\"profilePopinVisible\">\r\n    <material-dialog class=\"basic-dialog profile_pop\">\r\n      <profile-comp *ngIf=\"connectedUser != null\"></profile-comp>\r\n    </material-dialog>\r\n  </modal>\r\n\r\n  <modal *ngIf=\"editingRole\" [visible]=\"editingRole\">\r\n    <material-dialog defaultPopupSizeProvider\r\n                     enforceSpaceConstraints\r\n                     class=\"profilemenuvisible\">\r\n      <change-roles-dialog></change-roles-dialog>\r\n    </material-dialog>\r\n  </modal>\r\n\r\n  <modal *ngIf=\"termsAndConditionsVisible != null\" [visible]=\"termsAndConditionsVisible\">\r\n    <material-dialog defaultPopupSizeProvider\r\n                     enforceSpaceConstraints\r\n                     headered info class=\"termsConditions\">\r\n      <termsConditions-comp [name]=\"'termsAndConditions'\"></termsConditions-comp>\r\n    </material-dialog>\r\n  </modal>\r\n\r\n  <modal *ngIf=\"electronProxyCredentials != null\" [visible]=\"electronProxyCredentials != null\">\r\n    <material-dialog class=\"proxyCredentials\">\r\n      <proxy-credentials></proxy-credentials>\r\n    </material-dialog>\r\n  </modal>\r\n\r\n  <div [class.hideHeaderTop]=\"connectedUser == null\" class=\"header header-top\">\r\n    <div class=\"leftHeader\">\r\n      <div class=\"titleHeader\">Share.Place <label class=\"desktopVersion\">V{{appVersion}}</label></div>\r\n      <div class=\"labelHeader\" id=\"urlCopy\" *ngIf=\"connectedUser != null\">\r\n        <input #inputCopyUrl draggable=\"false\" class=\"inputCopyUrl\" [(ngModel)]=\"displayLink\"\r\n               (keyup.enter)=\"goToDisplayLink(inputCopyUrl)\" (click)=\"inputCopyClicked(inputCopyUrl)\"\r\n               (keyup.esc)=\"inputCopyEscaped(inputCopyUrl)\" value=\"{{displayLink}}\" spellcheck=\"false\">\r\n        <div class=\"copyIcon\" (click)=\"copyUrlToClipboard()\" title=\"Copy this Url\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"alertInner\">\r\n      <!--<notification [msg]=\"error\" class=\"notif error\" [duration]=\"-1\"></notification>-->\r\n      <div *ngIf=\"errors  != null && errors.length > 0\">\r\n        <div *ngFor=\"let errorItem of errors\">\r\n          <notification [msg]=\"errorItem\" class=\"notif error\" [duration]=\"-1\"></notification>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"messages != null && messages.length > 0\">\r\n        <div *ngFor=\"let messageItem of messages\">\r\n          <notification [msg]=\"messageItem\" class=\"notif message\" [duration]=\"-1\"></notification>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"rightMenu\">\r\n      <a class=\"openDesktopApp\" *ngIf=\"isWebApp\" href=\"{{desktopUrl}}\"></a>\r\n      <div class=\"imgProfil\" *ngIf=\"connectedUser != null\" (click)=\"profile()\">\r\n        <img popupSource #profileMenu=\"popupSource\" alignPositionX=\"end\"\r\n             alignPositionY=\"after\"\r\n             src=\"{{userPictureUrl}}\"\r\n             class=\"profileImg\"\r\n             (click)=\"profile()\"/>\r\n      </div>\r\n\r\n      <div class=\"btnsWindow\" *ngIf=\"!isWebApp && !isMac\">\r\n        <div class=\"btnHeader minus\" aria-hidden=\"true\" (click)=\"sendWindowEvent('minimizeWindow')\"></div>\r\n        <div class=\"btnHeader window-maximize\" aria-hidden=\"true\"\r\n             (click)=\"sendWindowEvent('maximizeWindow')\"></div>\r\n        <div class=\"btnHeader closeWind\" aria-hidden=\"true\" (click)=\"sendWindowEvent('closeWindow')\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n  <div #leftPanel id=\"leftP\" class=\"leftP\" style=\"width:17%\">\r\n    <div class=\"logo_header\">\r\n      <div class=\"logo\" title=\"Welcome to Share Place\"></div>\r\n      <!--<img src=\"/images/logo_sharePlace.png\" class=\"logo\">-->\r\n    </div>\r\n    <div class=\"showPanel\" [class.closePanel]=\"showingLeftP\" (click)=\"switchPlacesPanel(leftPanel)\"><i\r\n        class=\"zmdi zmdi-chevron-right\"></i></div>\r\n\r\n\r\n    <places [class.hidden]=\"!showingLeftP\"></places>\r\n  </div>\r\n\r\n  <div #rightPanel class=\"rightPanelInside\" style=\"width: 83%\" [class.showPanelPlaces]=\"showingLeftP\"\r\n       [class.hidePanelPlaces]=\"!showingLeftP\" [class.forbidden]=\"!hasAccessToFolder\">\r\n    <div class=\"headerPanelRight\">\r\n      <div class=\"rightPanelInsideHeader\">\r\n        <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\">\r\n          <tr>\r\n            <td width=\"60%\" [class.hideTree]=\"showingLeftP\">\r\n              <div class=\"breadCrumbContent\">\r\n                <breadcrumbs-comp></breadcrumbs-comp>\r\n              </div>\r\n            </td>\r\n            <td width=\"40%\">\r\n              <search-input></search-input>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <search-comp id=\"searchResult\" *ngIf=\"searchText != null\"></search-comp>\r\n    </div>\r\n    <error-comp *ngIf=\"!hasAccessToFolder\"></error-comp>\r\n    <div *ngIf=\"hasAccessToFolder\" class=\"panel-bottom\">\r\n      <div class=\"centerP\">\r\n        <subjects></subjects>\r\n      </div>\r\n      <div class=\"rightP\">\r\n        <div class=\"files\">\r\n          <files-comp></files-comp>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n",
        "templateUrl": "asset:share_place/lib/app_component.html",
        "styles": [],
        "styleUrls": [
          "asset:share_place/lib/app_component.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [
        {
          "class": "Identifier",
          "name": "ROUTER_PROVIDERS",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        },
        {
          "class": "Identifier",
          "name": "materialProviders",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        },
        {
          "class": "Identifier",
          "name": "PlaceService",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        }
      ],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}