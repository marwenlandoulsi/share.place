{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "dart:async",
        "5": false
      },
      {
        "1": "dart:html",
        "5": false
      },
      {
        "1": "package:angular2/core.dart",
        "5": false
      },
      {
        "1": "package:angular2/router.dart",
        "5": false
      },
      {
        "1": "package:angular2/security.dart",
        "5": false
      },
      {
        "1": "package:angular_components/angular_components.dart",
        "5": false
      },
      {
        "1": "package:share_place/environment.dart",
        "5": false
      },
      {
        "1": "package:share_place/folder.dart",
        "5": false
      },
      {
        "1": "package:share_place/place.dart",
        "5": false
      },
      {
        "1": "package:share_place/file_info.dart",
        "5": false
      },
      {
        "1": "package:share_place/place_service.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/ui/button_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/info_popup/info_popup.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/info_popup/popup_parent.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/invite/invite_dialog_comp.dart",
        "5": false
      },
      {
        "1": "package:share_place/app_config.dart",
        "4": "conf",
        "5": false
      },
      {
        "1": "package:share_place/users/user.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/user_list_provider.dart",
        "5": false
      },
      {
        "1": "package:share_place/postit/postit_component.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/html/html_util.dart",
        "4": "html_util",
        "5": false
      },
      {
        "1": "package:share_place/app_constants.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/event/event_analyser.dart",
        "5": false
      },
      {
        "1": "package:share_place/common/html/wrap_bold_pipe.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/userList_Popup/userList_Popup.dart",
        "5": false
      },
      {
        "1": "package:share_place/users/user_util.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "SubjectListComponent",
        "4": [
          {
            "1": "Injectable",
            "4": false
          }
        ],
        "5": [
          {
            "1": "PlaceService",
            "4": "_placeService"
          },
          {
            "1": "Router",
            "4": "_router"
          },
          {
            "1": "Environment",
            "4": "_environment"
          },
          {
            "1": "UserListProvider",
            "4": "_userListProvider"
          },
          {
            "1": "DomSanitizationService",
            "4": "urlSanitizer"
          },
          {
            "1": "UserUtil",
            "4": "_userUtil"
          }
        ],
        "6": [
          "OnInit",
          "AfterViewChecked"
        ],
        "7": [
          {
            "2": "ButtonComp"
          },
          {
            "2": "materialDirectives"
          },
          {
            "2": "InviteUsersDialogComp"
          },
          {
            "2": "PostitComponent"
          },
          {
            "2": "InfoPopup"
          },
          {
            "2": "userListPopup"
          }
        ],
        "8": [
          {
            "2": "wrapBoldPipe"
          }
        ]
      }
    ],
    "6": "subject_list_comp.dart"
  },
  "type": {
    "SubjectListComponent": {
      "class": "Directive",
      "isComponent": true,
      "selector": "subjects",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "SubjectListComponent",
        "moduleUrl": "asset:share_place/lib/subject/subject_list_comp.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": [
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "PlaceService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Router",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "Environment",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "UserListProvider",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "DomSanitizationService",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          },
          {
            "token": {
              "value": null,
              "identifier": {
                "class": "Identifier",
                "name": "UserUtil",
                "moduleUrl": null,
                "prefix": null,
                "value": null
              },
              "identifierIsInstance": false
            },
            "value": null,
            "isAttribute": false,
            "isSelf": false,
            "isHost": false,
            "isSkipSelf": false,
            "isOptional": false,
            "isValue": false
          }
        ]
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [
        0,
        7
      ],
      "template": {
        "encapsulation": 0,
        "template": "<div *ngIf=\"selectedFolder != null\" class=\"subjects {{dropFileFormVisible ? 'dropZoneVisible' : 'hideDropZone'}}\">\r\n\r\n  <div #dropZone class=\"dropZone\">\r\n    <div class=\"headerSubject\">\r\n      <span class=\"nameTroq titleSubject\" title=\"{{selectedFolder.name}}\"\r\n            [innerHTML]=\"selectedFolder?.name  | wrapBold: searchText\"></span>\r\n\r\n      <modal [visible]=\"adding\">\r\n        <material-dialog defaultPopupSizeProvider\r\n                         enforceSpaceConstraints\r\n                         class=\"profilemenuvisible\">\r\n          <invite-users-dialog></invite-users-dialog>\r\n        </material-dialog>\r\n      </modal>\r\n\r\n      <div class=\"rightSubjTitle\">\r\n        <!-- emplacement des users  -->\r\n\r\n        <ul class=\"users_list\">\r\n          <div style=\"background-color: red\" (click)=\"showPopupUserList()\" *ngIf=\"hiddenUserNbre > 0\">\r\n            <div popupSource alignPositionX=\"end\" class=\"computeUsers\"\r\n                 alignPositionY=\"after\" #userListPopup=\"popupSource\"> +{{hiddenUserNbre}}\r\n            </div>\r\n            <userList-Popup [source]=\"userListPopup\" [offsetX]=\"7\" [offsetY]=\"0\"\r\n                            [arrowCss]=\"'arrowTop'\"></userList-Popup>\r\n          </div>\r\n          <li *ngFor=\"let userItem of usersToShow\" popupSource #userInfoPopup=\"popupSource\" alignPositionX=\"end\"\r\n              alignPositionY=\"after\" class=\"useractive\" [class.approver]=\"isOwner(userItem)\"\r\n              (click)=\"userInfoRequested=userItem\">\r\n            <img src=\"{{userProfilePic(userItem.id)}}\">\r\n            <info-popup *ngIf=\"infoPopupUser?.id == userItem.id\" [(visible)]=\"infoPopupOpen\"\r\n                        [source]=\"userInfoPopup\"\r\n                        [offsetX]=\"7\" [offsetY]=\"0\"\r\n                        [userId]=\"userItem.id\" [parent]=\"self\" [allowUserRemoval]=\"true\"\r\n                        [user]=\"userItem\"\r\n                        [arrowCss]=\"'arrowTop'\"></info-popup>\r\n          </li>\r\n        </ul>\r\n        <div (click)=\"add()\" class=\"addBtn addPeople\" id=\"btnAddPeople\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"newTopic\">\r\n      <div class=\"newTopicBlock\">\r\n        <input id=\"addTopic\" type=\"text\" #text (keyup)=\"note=text.value\" (keyup.enter)=\"createQuickNote(false)\"\r\n               placeholder=\"Start a topic...\"\r\n               class=\"txt\" value=\"{{note}}\"/>\r\n        <div (click)=\"createQuickNote(false)\" class=\"btn_valid\"></div>\r\n      </div>\r\n      <div class=\"addTopicBtn\" (click)=\"fileInput.click()\"></div>\r\n    </div>\r\n    <div class=\"zoneDragingIn\">\r\n      <div class=\"subjectListScollZone\" (dragenter)=\"dragEnter(dropZone)\">\r\n        <div class=\"scrollbar-macosx\">\r\n          <div class=\"spinnerInner\" *ngIf=\"subjects == null\">\r\n            <material-spinner class=\"spinner\"></material-spinner>\r\n          </div>\r\n\r\n          <!--<postit-comp  [name]=\"'places'\" [header]=welcomePostit-->\r\n          <!--[body]=visiblePostits-->\r\n          <!--class=\"placesPostit\"></postit-comp>-->\r\n\r\n\r\n          <ul id=\"subjectList\" #subjectList class=\"subjectList\">\r\n\r\n            <li *ngFor=\"let subject of subjects; let subjectIndex = index\" (click)=\"gotoSubject(subject)\"\r\n                class=\"subjectItem\"\r\n                [class.qNote]=\"subject.dataType == 'quickNote'\"\r\n                [class.selected]=\"selectedSubject != null && subject.id == selectedSubject.id\"\r\n                [class.approved]=\"subject.approved != null\"\r\n                [class.locked]=\"subject.lockOwner != null\"\r\n                [class.ownAction]=\"subject.lockOwner?.userId == connectedUser.id\"\r\n                [class.unread]=\"wasRead(subject)\"\r\n                id=\"{{constructSubjectDivId(subject)}}\">\r\n\r\n              <div *ngIf=\"renaming == null || renaming?.id != subject?.id\" class=\"subject\"\r\n                   (dragstart)=\"$event.dataTransfer.setData('subjectId', subject.id);\" draggable=\"true\">\r\n                <div class=\"thumb\">\r\n                  <div *ngIf=\"subject.status == 'waiting'\" class=\"spinnerInner\">\r\n                    <material-spinner class=\"spinner\"></material-spinner>\r\n                  </div>\r\n                  <div *ngIf=\"subject.status == 'definitelyLost'\" class=\"crashedInner\"></div>\r\n                  <img *ngIf=\"subject.status != 'waiting'\"\r\n                       src=\"{{thumbSrc(subject,selectedFolder)}}\">\r\n                </div>\r\n                <div *ngIf=\"subject.mimeType != 'application/quickNote'\" class=\"version\"> V.{{subject.v}}</div>\r\n                <div class=\"name\" title=\"{{subject.name}}\" [innerHTML]=\"subject?.name  | wrapBold: searchText\">\r\n                  <!--{{subject.name}}-->\r\n                </div>\r\n                <div class=\"subjectRight\">\r\n\r\n                  <div (click)=\"rename(subject)\" class=\"rename_subject\"\r\n                       *ngIf=\"(subject.dataType == 'quickNote' || subject.dataType == 'file') && (connectedUserIsOwner || isWriter) \"></div>\r\n                  <div (click)=\"removeSubject(subject, $event)\" class=\"delete_subject\"\r\n                       *ngIf=\"(subject.dataType == 'quickNote' || subject.dataType == 'file') && (connectedUserIsOwner || isWriter)\"></div>\r\n\r\n                  <div class=\"users\">\r\n                    <ul>\r\n                      <!-- lastThreeUsers(subject) -->\r\n                      <li *ngFor=\"let activeUser of subject.users\" class=\"user\">\r\n                        <div class=\"profileImg\" [class.validator]=\"activeUser.role == 'admin'\"\r\n                             (click)=\"showSubjectUserInfoPopup( activeUser.userId, subjectIndex, $event )\"\r\n                             popupSource alignPositionX=\"end\"\r\n                             alignPositionY=\"after\" #subjectParticipant=\"popupSource\">\r\n                          <img *ngIf=\"activeUser.photoId != null && activeUser.type == null\"\r\n                               src=\"/auth/gridfs/file/{{activeUser.photoId}}/picture.x\"\r\n                               class=\"profileImg\">\r\n                          <img *ngIf=\"activeUser.photoId == null && activeUser.type == null\"\r\n                               src=\"/images/img_profile.png\"\r\n                               class=\"profileImg\">\r\n                          <img *ngIf=\" activeUser.type == 'roby'\" src=\"/images/roby.png\">\r\n                        </div>\r\n                        <info-popup\r\n                            *ngIf=\"subjectIndex == subjectInfoPopupIndex && popupUserInfoId == activeUser.userId\"\r\n                            [userId]=\"activeUser.userId\"\r\n                            [source]=\"subjectParticipant\" [offsetX]=\"11\" [offsetY]=\"10\"\r\n                            [visible]=\"popupUserInfoId == activeUser.userId\" [parent]=\"self\"\r\n                            [arrowCss]=\"'arrowTop'\"></info-popup>\r\n                      </li>\r\n                    </ul>\r\n                    <div class=\"clearfix\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"subject\">\r\n                <!--  <input *ngIf=\"renaming != null || renaming?.id == subject?.id\" type=\"text\" #folderRenamer\r\n                         value=\"{{subject.name}}\"\r\n                         (keydown.enter)=\"doRename(folderRenamer.value)\" autofocus/>\r\n                  &lt;!&ndash;<btn [sources]=\"['../../images/ok_white.png', '../../images/ok_white.png', '../../images/ok_white.png']\"&ndash;&gt;\r\n\r\n  <btn [sources]=\"['../../images/ok_white.png', '../../images/ok_white.png', '../../images/ok_white.png']\"\r\n       (click)=\"doRename(folderRenamer.value)\"></btn>-->\r\n\r\n                <div *ngIf=\"isRenaming(subject)\" class=\"editSubject\">\r\n                  <input type=\"text\" #folderRenamer autoFocus=\"true\"\r\n                         value=\"{{subject.name}}\" (keyup.enter)=\"doRename(folderRenamer.value)\"/>\r\n                  <btn [sources]=\"['/images/okBlue.png', '/images/okBlue.png', '/images/okBlue.png']\"\r\n                       (click)=\"doRename(folderRenamer.value)\"></btn>\r\n                </div>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <form #fileForm id=\"fileForm\" class=\"uploadDropZone\" (dragenter)=\"dragEnter(dropZone)\"\r\n            (dragleave)=\"dragLeave(dropZone)\"\r\n            (drop)=\"fileDropped(dropZone)\">\r\n\r\n        <label #fileUploadLabel id=\"labelfileupload\" for=\"fileupload\"> Drag'n drop or browse file </label>\r\n        <input #fileInput type=\"file\" id=\"fileupload\"\r\n               (change)=\"uploadFiles($event.target.files, fileForm)\"\r\n               class=\"uploadFile\" name=\"toUpload\"\r\n               style=\"opacity: 0;\"\r\n               (click)=\"openFileDialogConditionally($event, fileUploadLabel)\" multiple/>\r\n        <!--<postit-comp [name]=\"'files'\" [header]=\"'Cool !'\"-->\r\n        <!--[body]=\"'Now you can Drag\\'n drop a file here and start collaborate with your team '\"-->\r\n        <!--class=\"filesPostit\"></postit-comp>-->\r\n\r\n      </form>\r\n    </div>\r\n\r\n\r\n    <!--<postit-comp [name]=\"'invitePeople'\" [header]=\"'Great!'\"-->\r\n    <!--[body]=\"'Now invite some poople to join you clicking on the + icon'\"-->\r\n    <!--class=\"subjectsPostit\"></postit-comp>-->\r\n\r\n    <!--<postit-comp  *ngIf=\"selectedSubject != null\" [name]=\"'welcomePostit'\" [header]=\"'Cool :) '\"-->\r\n    <!--[body]=\"'Now we are sharing this welcome document. Click on it, edit and release the doc. All the team will be updated in real time.'\"-->\r\n    <!--class=\"welcomePostit\"></postit-comp>-->\r\n\r\n  </div>\r\n\r\n\r\n  <modal *ngIf=\"showConfirmDialog\" [visible]=\"showConfirmDialog\">\r\n    <material-dialog class=\"basic-dialog fileOpen\" hideHeader=\"true\"\r\n                     hideFooter=\"true\">\r\n      <div class=\"popupHeader\">\r\n        <div class=\"fileName\">\r\n          Open Or create Note\r\n        </div>\r\n        <div class=\"close\" (click)=\"showConfirmDialog = false\"></div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"explanation\">\r\n          {{textConfirmDialog}}\r\n        </div>\r\n        <div class=\"fileActions\">\r\n          <table width=\"100%\" style=\"margin-top: 1em;\">\r\n            <tr>\r\n              <td width=\"45%\">\r\n                <div class=\"fileActions_btn\">\r\n                  <div class=\"btn material-icons newCopy\"\r\n                       (click)=\"createQuickNote(true)\"></div>\r\n                  <span>Create new</span>\r\n                </div>\r\n              </td>\r\n              <td width=\"10%\"></td>\r\n              <td width=\"45%\">\r\n                <div class=\"fileActions_btn\">\r\n                  <div class=\"btn material-icons goTo\"\r\n                       (click)=\"viewSameNote(conflictingId)\"></div>\r\n                  <span>Go to note</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </material-dialog>\r\n  </modal>\r\n</div>\r\n\r\n\r\n\r\n\r\n",
        "templateUrl": "asset:share_place/lib/subject/subject_list_comp.html",
        "styles": [],
        "styleUrls": [
          "asset:share_place/lib/subject/subject_list_comp.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [
        {
          "class": "Identifier",
          "name": "UserListProvider",
          "moduleUrl": null,
          "prefix": null,
          "value": null
        }
      ],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}